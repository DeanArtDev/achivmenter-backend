generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FinancialPartModel {
  id        Int @id @default(autoincrement())
  income    Int
  common    Int @db.SmallInt
  free      Int @db.SmallInt
  piggyBank Int @map("biggy_bank") @db.SmallInt

  corectins CorrectionModel[]

  financialReportId Int                  @map("financial_report_id")
  FinancialReport   FinancialReportModel @relation(fields: [financialReportId], references: [id], onDelete: Cascade)

  @@map("financial_parts")
}

model FinancialReportModel {
  id        Int                  @id @default(autoincrement())
  month     Int                  @db.SmallInt
  year      Int                  @db.SmallInt
  createdAt DateTime             @default(now()) @map("created_at") @db.Timestamp(6)
  partCount Int                  @map("part_count") @db.SmallInt
  parts     FinancialPartModel[]

  @@map("financial_reports")
}

model UserModel {
  id    Int    @id @default(autoincrement())
  email String @unique
  hash  String @map("password_hash")

  @@map("users")
}

model CorrectionModel {
  id        Int            @id @default(autoincrement())
  name      String
  amount    Int
  createdAt DateTime       @default(now()) @map("created_at") @db.Timestamp(6)
  type      CorrectionType

  financialPartId Int                @map("financial_part_id")
  FinancialPart   FinancialPartModel @relation(fields: [financialPartId], references: [id], onDelete: Cascade)

  @@map("corrections")
}

enum CorrectionType {
  common
  piggyBank
  free
}
